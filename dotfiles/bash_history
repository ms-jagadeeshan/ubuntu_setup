vim bash_profile 
sudo apt install mpv
clear
exit
mm "bash"
function mm() {     mpv --no-video --ytdl-format=bestaudio ytdl://ytsearch10:"$@"; }
mm headless rpi
mm raspberry pi setup headless
mm "raspberry pi setup headless"
exit
function mm() {     mpv --ytdl-format=bestaudio ytdl://ytsearch10:"$@"; }
mm "raspberry pi setup headless"
exittdl://ytsearch10:"$@"; }
exit
function mm() {     mpv --ytdl-format=bestaudio+bestvideo ytdl://ytsearch10:"$@"; }
mm "raspberry pi setup headless"
function mm() {     mpv --ytdl-format=bestvideo+bestaudio ytdl://ytsearch10:"$@"; }
mm "raspberry pi setup headless"
cd projects/useful_scripts/
ls
vim functions.sh 
ls
mv functions.sh ../ubuntu_workflow_setup/dotfiles/bash/functions 
ls
exit
cd ../ubuntu_workflow_setup/dotfiles/bash/
cat functions 
clearexit
exit
cd
ls -al
cd
ls
ls
cd
ls
ls -a
ls -al
man ls
man ln
cd projects/ubuntu_workflow_setup/scripts/
ls
vim application_setup.sh 
exit
ip a
sudo nmap -sn 0.42.0.1/24
sudo nmap -sn 10.42.0.1/24
ssh pi@raspberrypi.local
sudo nmap -sn 0.42.0.1/24
sudo nmap -sn 10.42.0.1/24
exit
ls projects/
sudo apt-get install nmap
exit
kernelgraph 
exi
exit
gmail() { curl -u "$1" --silent "https://mail.google.com/mail/feed/atom" | sed -e 's///'}
gmail() { curl -u "$1" --silent "https://mail.google.com/mail/feed/atom" | sed -e 's///' }
gmail() { curl -u "$1" --silent "https://mail.google.com/mail/feed/atom" | sed -e 's@@@' }
curl -u "jagadeeshanmsj" --silent "https://mail.google.com/mail/feed/atom" | sed -e 's///'
curl -u "jagadeeshanmsj" --silent "https://mail.google.com/mail/feed/atom"
curl -u "jagadeeshanmsj@gmail.com" --silent "https://mail.google.com/mail/feed/atom"
curl -u "jagadeeshanmsj@gmail.com"  "https://mail.google.com/mail/feed/atom"
curl ifconfig.me
curl ifconfig.me/host
curl ifconfig.me && curl ifconfig.me/host
exit
ssh freak!
histg frea
ssh freak@207.148.27.101
histg roo
ssh root@207.148.27.101
exit
wget linuxfreak.xyz
exit
cd 
cd projects/ubuntu_workflow_setup/scripts/
vim application_setup.sh 
exit
networkctl up 
systemctl start systemd-networkd
networkctl up wlp0s20f3 
sudo networkctl up wlp0s20f3 
sudo networkctl down wlp0s20f3 
sudo networkctl up wlp0s20f3 
sudo networkctl down wlp0s20f3 
networkctl list
networkctl status
systemctl stop systemd-networkd.service 
systemctl stop systemd-networkd.socket 
clear
exit
ls
openvpn client.ovpn
ssh abc@dklf
ssh pi@raspberrypi
ssh pi@raspberrypi.local
sftp freak@207.148.27.101
clear
ls
sudo apt install openvpn
clear
sudo su
ipinfo
curl ipinfo.me
sudo apt install network-manager-openvpn-gnome 
network-manager-openvpn-gnome 
cd /mnt/
ls
mkdir /mnt/raspbian
sudo mkdir -p  /mnt/raspbian
echo $1
df
sudo apt install qemu qemu-user-static binfmt-support
cd ../
cd
sudo su
sudo apt install torbrowser-launcher 
touch static.key
vim static.key 
init 0
cd
ls
cd /
ls
exit
echo $tmp
exit
sudo apt-get install mediainfo\
sudo apt-get install mediainfo
man mediainfo 
cd Videos/Webseries/Dark/S1
ls
mediainfo Dark.S01E10.Alpha.and.Omega.mkv 
exiftool Dark.S01E10.Alpha.and.Omega.mkv 
clear
cd
clear
cd projects/ubuntu_workflow_setup/scripts/
ls
vim application_setup.sh 
cd
cd projects/ubuntu_workflow_setup/dotfiles/
ls
cd bash/
ls
vim bash_profile 
vim export
ls
vim bash_profile 
ls
vim bash_profile 
vim colors
vim export 
vim aliases 
vim bash_profile 
vim shopt
vim colors
ls
vim aliases 
vim export 
cat shopt 
shopt -s autocd 2>/dev/null
cd
projects
cd ubuntu_workflow_setup/dotfiles/
bash
cd bash/
vim shopt 
clear
vim shopt 
tmp=23
echo $tmp
bash
vim export 
alias ?="ggrep --color=auto --exclude-dir={$GREP_DIR_IGNORES} --exclude-from=$HOME/.ignore.grep"
? tmp
alias ?="grep --color=auto --exclude-dir={$GREP_DIR_IGNORES} --exclude-from=$HOME/.ignore.grep"
? h
alias ?="grep --color=auto --exclude-dir={$GREP_DIR_IGNORES} "
? tm
? tmp
ls
clear
vim aliases 
clear
alias E='f(){ $EDITOR ${*:-.};}; f'
E
E export 
cat export 
E 
E a
E ls
ls
clear
alias reload='exec bash -l'
reload
tmp=a
echo $tmp
alias reload='exec bash -l'
reload
echo $tmp
man bash
clear
exit
cd projects/ubuntu_workflow_setup/dotfiles/
ls
cd bash/
ls
vim bash_profile 
ps1='\[${rst}${bwht}${bgblk}\]\D{%H:%M}'
ps1+='\[${rst}${bpur}\]$( __git_ps1 "%s" )'
ps1+='\[${rst}${tgrn}\]$( _git_status_stats "[%s]" )'
ps1+='\[${rst}${tylw}\]$( ssh_prompt)'
ps1+='\[${rst}${tred}\]$( V=$PIPESTATUS; if [[ $V -gt 0 ]]; then printf "%d" $V ; fi )'
ps1+='\n'
ps1+='\[${rst}${tylw}\]\W'
ps1+='\[${tgrn}\]\$'
ps1+='\[${rst}\] '
PS1="$ps1"
clear
exitstatus() {     if [[ $? == 0 ]]; then         echo ':)';     else         echo 'D:';     fi; }
PS1='$(exitstatus) > '
ls
ls /boot/
ls /boot/grub/
ls /boot/efi/
PS0="dfas"
sleep 100
fafd\
PS2="dfa> "
sfclear
clear
PS1="$(awk '/MemFree/{print $2}' /proc/meminfo) prompt > "
clear
ls
bash
clear
rightprompt() {     printf "%*s" $COLUMNS "right prompt"; }
PS1='\[$(tput sc; rightprompt; tput rc)\]left prompt > '
clear
tput cup $((LINES - 11)) $((COLUMNS - 6))
j
PS1='\[\e]2;new title\a\]prompt > '
clear
ls
exit
echo $HOSTNAME
##### My (demuredemeanor) bashrc sub source prompt script
# Uses tabstop=4; shiftwidth=4 tabs; foldmarker={{{,}}};
# https://notabug.org/demure/dotfiles/
# legacy repo http://github.com/demure/dotfiles
# vim:set syntax=bash:
## This Changes The PS1
export PROMPT_COMMAND=__prompt_command      # Func to gen PS1 after CMDs
function __prompt_command() {     local EXIT=${PIPESTATUS[-1]}            # This needs to be first
    PS1=""
    local RCol='\[\e[0m\]'  # Text Reset
    local Bla='\[\e[0;30m\]';    local BBla='\[\e[1;30m\]';    local UBla='\[\e[4;30m\]';    local IBla='\[\e[0;90m\]';    local BIBla='\[\e[1;90m\]';    local On_Bla='\e[40m';    local On_IBla='\[\e[0;100m\]';     local Red='\[\e[0;31m\]';    local BRed='\[\e[1;31m\]';    local URed='\[\e[4;31m\]';    local IRed='\[\e[0;91m\]';    local BIRed='\[\e[1;91m\]';    local On_Red='\e[41m';    local On_IRed='\[\e[0;101m\]';     local Gre='\[\e[0;32m\]';    local BGre='\[\e[1;32m\]';    local UGre='\[\e[4;32m\]';    local IGre='\[\e[0;92m\]';    local BIGre='\[\e[1;92m\]';    local On_Gre='\e[42m';    local On_IGre='\[\e[0;102m\]';     local Yel='\[\e[0;33m\]';    local BYel='\[\e[1;33m\]';    local UYel='\[\e[4;33m\]';    local IYel='\[\e[0;93m\]';    local BIYel='\[\e[1;93m\]';    local On_Yel='\e[43m';    local On_IYel='\[\e[0;103m\]';     local Blu='\[\e[0;34m\]';    local BBlu='\[\e[1;34m\]';    local UBlu='\[\e[4;34m\]';    local IBlu='\[\e[0;94m\]';    local BIBlu='\[\e[1;94m\]';    local On_Blu='\e[44m';    local On_IBlu='\[\e[0;104m\]';     local Pur='\[\e[0;35m\]';    local BPur='\[\e[1;35m\]';    local UPur='\[\e[4;35m\]';    local IPur='\[\e[0;95m\]';    local BIPur='\[\e[1;95m\]';    local On_Pur='\e[45m';    local On_IPur='\[\e[0;105m\]';     local Cya='\[\e[0;36m\]';    local BCya='\[\e[1;36m\]';    local UCya='\[\e[4;36m\]';    local ICya='\[\e[0;96m\]';    local BICya='\[\e[1;96m\]';    local On_Cya='\e[46m';    local On_ICya='\[\e[0;106m\]';     local Whi='\[\e[0;37m\]';    local BWhi='\[\e[1;37m\]';    local UWhi='\[\e[4;37m\]';    local IWhi='\[\e[0;97m\]';    local BIWhi='\[\e[1;97m\]';    local On_Whi='\e[47m';    local On_IWhi='\[\e[0;107m\]';     if [ ${UID} -eq "0" ];then         PS1+="${Red}\h \W ->${RCol} "       ## Set prompt for root
      else         local PSCol=""                      ## Declare so null var fine
        local PSOpt=""                      ## Above, and fixes repeat issue         if [ ${EXIT} != 0 ]; then             PS1+="${Red}${EXIT}${RCol}"     ## Add exit code, if non 0
        fi
        local SHost="$(echo $HOSTNAME | awk 'match($0,/^[a-zA-Z0-9]+/) {print substr($0,RSTART,RLENGTH)}')";         if [ ${HOSTNAME} == 'moving-computer-of-doom' ]; then             local PSCol="$Cya"              ## For Main Computer
        elif [ ${HOSTNAME} == 'vps-of-doom' ]; then             local PSCol="$Blu"              ## For VPS
            local PSOpt="${SHost} ";         elif [ ${HOSTNAME} == 'ma.sdf.org' ]; then             local PSCol="${Yel}"            #@ For MetaArray
            local PSOpt="\h ";         elif [ ${HOSTNAME} == 'fencepost.gnu.org' ]; then             local PSCol="${On_Pur}"         ## For Gnu
            local PSOpt="\h ";         elif [ ${HOSTTYPE} == 'arm' ]; then             local PSCol="$Gre"              #@ For pi
            local PSOpt="${SHost} ";         elif [ ${OSTYPE} == 'linux-android' ]; then             local PSCol="$Gre"              #@ For Android Termux`
        elif [[ ${MACHTYPE} =~ arm-apple-darwin ]]; then             local PSCol="$Gre"              ## For iOS
        elif [ ${MACHTYPE} == 'i486-pc-linux-gnu' ]; then             local PSCol="$BBla"             ## For Netbook
            local PSOpt="${SHost} ";         elif [[ "${MACHTYPE}" == "x86_64--netbsd" && "${OSTYPE}" == "netbsd" ]]; then             local PSCol="${Yel}"            ## For Main Cluster
            local PSOpt="\h ";         elif [ "${MACHTYPE}" == "mips-openwrt-linux-gnu" ]; then             local PSCol="${On_Pur}"         ## For OpenWrt
            local PSOpt="\h ";           else             local PSCol="${Pur}"            ## Un-designated catch-all
            if [ ! ${HOSTNAME} == 'localhost' ]; then                 local PSOpt="\h ";               else                 PSOS="$(awk -F '=' '/^ID=/ {print $2}' /etc/*release)";                 local PSOpt="[${PSOS}] ";             fi;             MISSING_ITEMS+="machine-prompt, ";         fi         PS1+="${PSCol}${PSOpt}\W${RCol}"    ## Current working dir
        type jobs &>/dev/null;         if [ ${PIPESTATUS[-1]} == 0 ]; then
            local BKGJBS=$(jobs -r | wc -l | tr -d ' ');             if [ ${BKGJBS} -gt 2 ]; then                 PS1+=" ${Red}[bg:${BKGJBS}]${RCol}";             elif [ ${BKGJBS} -gt 0 ]; then                 PS1+=" ${Yel}[bg:${BKGJBS}]${RCol}";             fi
            local STPJBS=$(jobs -s | wc -l | tr -d ' ');             if [ ${STPJBS} -gt 2 ]; then                 PS1+=" ${Red}[stp:${STPJBS}]${RCol}";             elif [ ${STPJBS} -gt 0 ]; then                 PS1+=" ${Yel}[stp:${STPJBS}]${RCol}";             fi;         fi
        if [[ $(command -v git) ]]; then
            local GSP="$(git status --porcelain=2 --branch 2>/dev/null)"             if [ -n "${GSP}" ]; then
                local LAST=$(stat -c %Y $(git rev-parse --git-dir 2>/dev/null)/FETCH_HEAD 2>/dev/null);                 if [ -n "${LAST}" ]; then                     local TIME=$(echo $(($(date +"%s") - ${LAST})))
                    if [ "${TIME}" -gt "3600" ]; then                         local GF=1      ## Git Fetch True
                    fi;                   else                     local GF=1          ## Git Fetch True
                fi;                 if [ -n "${GF}" ] && [ "${GF}" == "1" ]; then                     git fetch 2>/dev/null;                     PS1+=' +'
                    local GSP="$(git status --porcelain=2 --branch 2>/dev/null)";                 fi
                local GSPcc="$(grep -c "^[12] .M" <<< "${GSP}")";                 if [ "${GSPcc}" == "0" ]; then                     local GBC=$Gre                  ## Branch Color
                  else                     local GBC=$Red                  ## Branch Color
                fi
                local GSPcb="$(awk '/branch.head/ {print $3}' <<< "${GSP}")";                 if [ -n "${GSPcb}" ]; then                     GSPcb="[${GSPcb}]"              ## Add brackets for final output. Will now test against brackets as well.
                    if [ "${GSPcb}" == "[master]" ]; then                         local GSPcb="[M]"           ## Because why waste space
                    fi
                    if [ "${GSPcb}" == "[(detached)]" ]; then
                        local GSPcb="$(awk '/branch.oid/ {print substr($3,0,8)}' <<< "${GSP}")";                     fi;                   else
                    local GSPcb="ERROR"             ## It could happen?
                fi                 PS1+=" ${GBC}${GSPcb}${RCol}"       ## Add result to prompt
                local GSPca="$(awk '/branch.ab/ {print substr($3,2)}' <<< "${GSP}")";                 if [ -n "${GSPca}" ] && [ "${GSPca}" -gt 0 ]; then                     PS1+="${Gre}↑${RCol}${GSPca}"   ## Ahead
                fi
                local GSPcb="$(awk '/branch.ab/ {print substr($4,2)}' <<< "${GSP}")";                 if [ -n "${GSPcb}" ] && [ "${GSPcb}" -gt 0 ]; then                     PS1+="${Red}↓${RCol}${GSPcb}"   ## Behind
                fi
                local GSPm="$(grep -c "^[12] .M" <<< "${GSP}")";                 if [ "${GSPm}" -gt "0" ]; then                     PS1+="${Pur}≠${RCol}${GSPm}"    ## Modified
                fi
                local GSPd="$(grep -c "^[12] D" <<< "${GSP}")";                 if [ "${GSPd}" -gt "0" ]; then                     PS1+="${Red}✖${RCol}${GSPd}"    ## Deleted
                fi
                local GSPa="$(grep -c "^[12] A" <<< "${GSP}")";                 if [ "${GSPa}" -gt "0" ]; then                     PS1+="${Gre}✚${RCol}${GSPa}"    ## Added
                fi
                local GSPr="$(grep -c "^[12] R" <<< "${GSP}")";                 if [ "${GSPr}" -gt "0" ]; then                     PS1+="${Blu}☇${RCol}${GSPr}"    ## Renamed
                fi
                local GSPu="$(grep -c "^?" <<< "${GSP}")";                 if [ "${GSPu}" -gt "0" ]; then                     PS1+="${Yel}?${RCol}${GSPu}"    ## Untracked
                fi
            fi;           else             MISSING_ITEMS+="git-prompt, ";         fi
        if [ "$(type -t _z)" = "function" ]; then             (_z --add "$(command pwd '$_Z_RESOLVE_SYMLINKS' 2>/dev/null)" 2>/dev/null &);         fi         PS1+=" ${PSCol}-> ${RCol}"          ## End of PS1
    fi; }
clea
clear
ls
ls sf
cd Do
cd lib/
ls
git status
cd class
cd class-joiner-v2/
cd
clear
ls
echo f-adf
cd afa
cd a
cd
bash
ps1='\[${rst}${bwht}${bgblk}\]\D{%H:%M}'
PS1='\[${rst}${bwht}${bgblk}\]\D{%H:%M}'
PS1+='\[${rst}${bpur}\]$( __git_ps1 "%s" )'
PS1+='\[${rst}${tred}\]$( V=$PIPESTATUS; if [[ $V -gt 0 ]]; then printf "%d" $V ; fi )'
PS1+='\n'
PS1+='\[${rst}${tylw}\]\W'
PS1+='\[${tgrn}\]\$'
PS1+='\[${rst}\] '
clear
cd Downloads/
ls
clear
man tail
tail -f /var/log/syslog
du -ah
du -ash
du -sh
clear
alias Bstats='f() { history|cut -d\  -f4-5|sort|uniq -c|sort -rn|head -${1:-30}; }; f'
Bstats 
exit
ls -al
clear
exit
cd
ls -al
ln -s /home/jaga_matrix/projects/ubuntu_setup/dotfiles/bash .bash
ln -sf /home/jaga_matrix/projects/ubuntu_setup/dotfiles/bash .bash
ls -al
ln -sf /home/jaga_matrix/projects/ubuntu_setup/dotfiles/bash_history .bash_history
ln -sf /home/jaga_matrix/projects/ubuntu_setup/dotfiles/bashrc .bashrc
exit
ln -sf ${HOME}/projects/ubuntu_setup/dotfiles/bashrc ~/.bashrc
cd
ls -al
exit
cd
cd .bash
cd bash
cd
cd .bash
exit
ls -al
rm bash
exit
cd
rm .bash
exit
cd projects/ubuntu_workflow_setup/dotfiles/bash/
ls
vim prompt
vim bash_profile 
ls
mkdir hosts
cd hosts/
cd ../
vim bash_profile 
vim export 
clear
cat bash_profile 
cd hosts/
vim turing-machine_conf
cd ../
vim bash_profile 
cd ../
ls
cat bash
cat bashrc 
ls
cat bashrc 
vim bashrc 
ls
cd bash/
ls
vim colors 
vim aliases 
vim bash_profile 
cd ../
cd scripts/
ls
cat test.sh 
rm test.sh 
cat text.sh 
clear
ls
cat main.sh 
cat projects_setup.sh 
ca keybindings.sh 
cat keybindings.sh 
ls
cat debloat.sh 
./debloat.sh 
vim application_setup.sh 
ls
man ln
vim dotfiles.sh
./debloat.sh 
chmod +x dotfiles.sh 
./dotfiles.sh 
cd ../
cd dotfiles/
ls
cd bash/
ls
cd -
cd u
cd s
cd ../scripts/
ls
vim dotfiles.sh 
clear
exit
command -v
man command 
command -v la
command -v ls
command -v l
command -v lfa
echo $?
command -v l
echo $?
echo PATH
echo $PATH
cat /etc/profile
cat .profile 
vim projects/ubuntu_workflow_setup/dotfiles/
vim projects/ubuntu_workflow_setup/dotfiles/.bash_profile 
cd  projects/ubuntu_workflow_setup/dotfiles/bash/hosts/
vim turing-machine_conf 
clear
cd ../../
ls
rm .bash_profile 
ls
cd bash/
ls
cd bash
ls
cd ..
rm bash
ln -sf ~/projects/ubuntu_setup/dotfiles/bash ~/.bash
ls
rm bash
ln -sf ~/projects/ubuntu_setup/dotfiles/bash ~/.bash
ls
cd ../
ls
cd ../
ls
cd
cd .vscode/
ls
cd extensions/
ls
cd ../
cat argv.json 
cd 
cd .bash
ls -al
cd
ls 
ls -al
rm .bash_aliases 
ls -al
ls -al
clear
cd
ls
ls -al
ln -s /home/jaga_matrix/projects/ubuntu_workflow_setup/dotfiles/bash /home/jaga_matrix/.bash
cd
ls
ls -al
cd
gedit .bashrc
pwd
exit
pwd
exit
CUR_DIR=$(realpath ${PWD}/../dotfiles)
echo $CUR_DIR 
ls -al
cd
ls -al
cat application_setup.sh 
cd 
pushd asd
popd
terminfo
cmdinfo
type pushd
pushd
cd ..
pushd
popd
pushd ..
popd
pushd //
popd
cd
cat keybindings.sh 
vim text.sh 
echo_color() {     case $1 in         -r|--red)             tput setaf 1;             shift;             echo $@;             ;;         -g|--green)             tput setaf 2;             shift;             echo $@;             ;;         -y|--yellow)             tput setaf 3;             shift;             echo $@;             ;;         -b|--blue)             tput setaf 4;             shift;             echo $@;             ;;         *)             ;;     esac }
install_waterfox() {     if [ ! -d "~/Downloads" ] ; then         mkdir -p ~/Downloads;     fi;     pushd ~/Downloads;     echo_color -y "Downloading waterfox tar archive";     wget -qO- https://github.com/WaterfoxCo/Waterfox/releases/download/G4.0.2.1/waterfox-G4.0.2.1.en-US.linux-x86_64.tar.bz2 | sudo tar -xj -C '/usr/local/bin/';     sudo chmod +x /usr/local/bin/waterfox/waterfox;     if [ ! -d "${HOME}/.local/share/applications" ]; then         mkdir -p "${HOME}/.local/share/applications";     fi;     sudo echo '[Desktop Entry]
Version=1.0
Name=Waterfox
Comment=Browse the World Wide Web                                                                                                                                                                                                                                     
GenericName=Web Browser                                                                                                                                                                                                                                               
Keywords=Internet;WWW;Browser;Web;Explorer                                                                                                                                                                                                                            
Terminal=false                                                                                                                                                                                                                                                        
Type=Application                                                                                                                                                                                                                                                      
Icon=/usr/local/bin/waterfox/browser/chrome/icons/default/default64.png                                                                                                                                                                                               
Exec="/usr/local/bin/waterfox/waterfox"                                                                                                                                                                                                                               
Categories=GNOME;GTK;Network;WebBrowser;                                                                                                                                                                                                                              
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
StartupNotify=true' | sudo tee $HOME/.local/share/applications > /dev/null                                                                                                                                                                                            ;     echo_color -y "Desktop shortcut createdecho_color() {     case $1 in         -r|--red)             tput setaf 1;             shift;             echo $@;             ;;         -g|--green)             tput setaf 2;             shift;             echo $@;             ;;         -y|--yellow)             tput setaf 3;             shift;             echo $@;             ;;         -b|--blue)             tput setaf 4;             shift;             echo $@;             ;;         *)             ;;     esac }"                                                                                                                                                                                                                        ;     popd; }
install_waterfox 
cd
cd .local/share/applications/
cd /usr/local/bin/waterfox/browser/
cd chrome/
cd icons/
cd default/
xdg-open default64.png 
cd
echo '[Desktop Entry]     
Version=1.0
Name=Waterfox
Comment=Browse the World Wide Web
GenericName=Web Browser
Keywords=Internet;WWW;Browser;Web;Explorer
Terminal=false
Type=Application
Icon=/usr/local/bin/waterfox/browser/chrome/icons/default/default64.png
Exec="/usr/local/bin/waterfox/waterfox"
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
StartupNotify=true' | tee $HOME/.local/share/applications/waterfox.desktop > /dev/null     
echo '[Desktop Entry]     
Version=1.0
Name=Waterfox
Comment=Browse the World Wide Web
GenericName=Web Browser
Keywords=Internet;WWW;Browser;Web;Explorer
Terminal=false
Type=Application
Icon=/usr/local/bin/waterfox/browser/chrome/icons/default/default64.png
Exec="/usr/local/bin/waterfox/waterfox"
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
StartupNotify=true' | tee $HOME/.local/share/applications/waterfox.desktop > /dev/null
cdecho '[Desktop Entry]     
Version=1.0
Name=Waterfox
Comment=Browse the World Wide Web
GenericName=Web Browser
Keywords=Internet;WWW;Browser;Web;Explorer
Terminal=false
Type=Application
Icon=/usr/local/bin/waterfox/browser/chrome/icons/default/default64.png
Exec="/usr/local/bin/waterfox/waterfox"
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
StartupNotify=true'
echo '[Desktop Entry]     
Version=1.0
Name=Waterfox
Comment=Browse the World Wide Web
GenericName=Web Browser
Keywords=Internet;WWW;Browser;Web;Explorer
Terminal=false
Type=Application
Icon=/usr/local/bin/waterfox/browser/chrome/icons/default/default64.png
Exec="/usr/local/bin/waterfox/waterfox"
Categories=GNOME;GTK;Network;WebBrowser;
MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
StartupNotify=true'
clear
exit
./hosts.sh 
./hosts.sh < 1
./hosts.sh < "1"
vim application_setup.sh `
vim application_setup.sh 
vim hosts.sh 
vim keybindings.sh 
vim main.sh 
cd 
cd .config/
cd mpv/
l
ls -al
mkdir scripts
cd scripts/
wget https://notabug.org/demure/dotfiles/raw/master/config/mpv/scripts/autoload.lua
mpv
aliases
cd
cat .bash/aliases 
cat .bash/functions 
mm s
clear
exit
cd projects/ubuntu_setup/
cd scripts/
vim dotfiles.sh 
./dotfiles.sh 
vim main.sh
cat text.sh 
cd ../
cd scripts/
rm text.sh 
clear
git status
git add .
git commit -m "first commit"
git config --global user.email "jagadeeshanmsj@gmail.com
git config --global user.email "jagadeeshanmsj@gmail.com"
git config --global user.name "ms-jagadeeshan"
git commit -m "first commit"
git push
cd ..
git clone https://github.com/ms-jagadeeshan/ubuntu_setup.git
git remote add ubuntu_setup https://github.com/ms-jagadeeshan/ubuntu_setup.git
git remote add origin https://github.com/ms-jagadeeshan/ubuntu_setup.git
cd ubuntu_setup/
git remote add origin https://github.com/ms-jagadeeshan/ubuntu_setup.git
git push -u origin master
code --version
exit
sudo apt install code
exit
vim tmp.sh
chmod +x tmp.sh 
./tmp.sh 
vim tmp.sh 
./tmp.sh 
rm tmp.sh 
cd ../
code ./
cd ..
git clone https://github.com/ms-jagadeeshan/ubuntu_setup.git
git push -u origin master
cd ../
git status
git add .
git commit -m "dotfiles and ubuntu setup"
git push
clear
exit
